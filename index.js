/*
Program:      Swagasaurus Bot
Description:  Bot utilizing node.js and discord.js. Preforms basic functionality
              such as greeting new users and assigning them roles based on their
              selection of an emoji on a welcome message. Also contains commands
              triggered by certain text commands though Discord's slash command API.
Authors:      Ian Ewing and Timothy Nigh
Created:      January 12, 2021
Updated:      August 2, 2021
*/

/* IMPORTS */
const Discord = require('discord.js');
const { token } = require('./config.json');
const Custom = require('./custom-behavior');
const {
  logger,
  commands,
  roles,
  widgets,
  messageTriggers,
} = require('./submodules'); // Require necessary submodules

/* CONSTANTS */
const client = new Discord.Client();

/* FUNCTIONS */

/**
 * Generic Message Reaction Helper Function
 * @desc  This function is called during the bot's message reaction add and remove events
 *        (whenever someone adds or removes an emoji from a message). This function simply
 *        serves as a place to put code that should be run on a reaction add OR remove, and
 *        needs to be aware of which.
 * @param {Discord.MessageReaction} messageReaction - Message Reaction object generated by the
                                                      event.
 * @param {Discord.User} user - User object generated by the event, represents user who reacted.
 * @param {boolean} added - Whether this is the 'added' event or not.
 */
function handleMessageReactionEvent(messageReaction, user, added) {
  const { message } = messageReaction;
  if (!user.bot && widgets.getWidget(message.id)) {
    /*
     * Handle any interactions if this message was created using the widget subsystem.
     * If a widget is bound to a single user, we want to make sure that only that user can react.
     */
    if (
      !widgets.getWidget(message.id).lockedTo
      || widgets.getWidget(message.id).lockedTo === user.id
    ) {
      widgets.handleReaction(message.id, messageReaction, user, added);
      return;
    }
    messageReaction.users.remove(user);
  }
  Custom.onReaction(messageReaction, user, added);
}

/* EVENTS */

// Called once bot is ready
client.once('ready', async () => {
  await commands.init();
  roles.init(client);
  messageTriggers.init();
  Custom.onReady(client);
  logger.rainbow('Swagasaurus Rex is Ready!');
});

// Called whenever a message is sent
client.on('message', (message) => {
  if (!message.author.bot) { // Block bot messages
    messageTriggers.proccessMessage(message);
  }
  Custom.onMessage(message, client);
});

// Called when a slash command is invoked
client.ws.on('INTERACTION_CREATE', async (interaction) => {
  commands.processInteraction(interaction, client);
});

// Called when a new member is added to a guild
client.on('guildMemberAdd', async (member) => {
  Custom.onGuildMemberAdd(member, client);
});

// Called when a reaction is added to a message
client.on('messageReactionAdd', (messageReaction, user) => {
  handleMessageReactionEvent(messageReaction, user, true);
});

// Called when a reaction is removed from a message
client.on('messageReactionRemove', (messageReaction, user) => {
  handleMessageReactionEvent(messageReaction, user, false);
});

// Log the bot into Discord using the token
client.login(token);
